package transform

import (
	maltego "github.com/dreadl0ck/netcap/maltego"
	"github.com/dreadl0ck/netcap/types"
	"strings"
)

func ToSoftwareExploits() {
	maltego.ExploitTransform(
		nil,
		func(lt maltego.LocalTransform, trx *maltego.MaltegoTransform, exp *types.Exploit, min, max uint64, profilesFile string, mac string, ipaddr string) {

			val := exp.ID
			product := exp.Software.Product + " / " + exp.Software.Version
			if len(product) > 0 {
				// for splitting descriptions from exploitdb
				//parts := strings.Split(vuln.Description, "-")
				//if len(parts) > 1 {
				//	val = parts[0] + "\n" + strings.Join(parts[1:], "-")
				//}
				val += "\n" + product
			}
			if len(exp.Description) > 0 {
				val += "\n" + exp.Description
			}
			for i, f := range exp.Software.Flows {
				if i == 3 {
					val += "\n..."
					break
				}
				val += "\n" + f
			}

			val = maltego.EscapeText(val)
			ent := trx.AddEntity("netcap.Exploit", val)
			ent.SetType("netcap.Exploit")
			ent.SetValue(val)

			ent.AddProperty("timestamp", "Timestamp", "strict", exp.Timestamp)
			ent.AddProperty("id", "ID", "strict", exp.ID)
			ent.AddProperty("notes", "Notes", "strict", maltego.EscapeText(exp.Notes))
			ent.AddProperty("flows", "flows", "strict", maltego.EscapeText(strings.Join(exp.Software.Flows, ",")))
			ent.AddProperty("software", "Software", "strict", maltego.EscapeText(exp.Software.Product+" "+exp.Software.Version))
			ent.AddProperty("file", "File", "strict", maltego.EscapeText(exp.File))
			ent.AddProperty("platform", "Platform", "strict", maltego.EscapeText(exp.Platform))
			ent.AddProperty("platform", "Platform", "strict", maltego.EscapeText(exp.Platform))
			//ent.AddProperty("date", "Date", "strict", maltego.EscapeText(exp.Date))
			ent.AddProperty("type", "Type", "strict", maltego.EscapeText(exp.Typ))

			ent.SetLinkColor("#000000")
			//ent.SetLinkThickness(maltego.GetThickness(uint64(count), min, max))
		},
	)
}
