builds:
- 
  main: ./cmd/capture
  binary: net.capture
  env:
    - CGO_ENABLED=1

  # For more info refer to: https://golang.org/doc/install/source#environment
  goos:
    - darwin
    - windows

  # Custom ldflags templates.
  # Default is `-s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{.Date}}`.
  ldflags:
    - -L /usr/local/opt/libpcap/lib -s -w -X main.build={{.Version}}

  # GOARCH to build for.
  # For more info refer to: https://golang.org/doc/install/source#environment
  # Defaults are 386 and amd64.
  goarch:
    - amd64
    # - arm
    # - arm64
    # - 386
  
  # List of combinations of GOOS + GOARCH + GOARM to ignore.
  # Default is empty.
  # ignore:
  #   - goos: windows
  #     goarch: 386
  #   - goos: darwin
  #     goarch: 386
    # - goos: linux
    #   goarch: arm
    #   goarm: 7

  # Hooks can be used to customize the final binary,
  # for example, to run generators.
  # Default is both hooks empty.
  hooks:
    # this hook is used to compile the linux version in a docker container
    post: zeus build-all-linux-docker
    #pre: rice embed-go
-
  main: ./cmd/util
  binary: net.util
  env:
    - CGO_ENABLED=1

  # For more info refer to: https://golang.org/doc/install/source#environment
  goos:
    - darwin
    - windows

  # Custom ldflags templates.
  # Default is `-s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{.Date}}`.
  ldflags:
    - -L /usr/local/opt/libpcap/lib -s -w -X main.build={{.Version}}

  # GOARCH to build for.
  # For more info refer to: https://golang.org/doc/install/source#environment
  # Defaults are 386 and amd64.
  goarch:
    - amd64
    - arm
    - arm64
- 
  main: ./cmd/label
  binary: net.label
  env:
    - CGO_ENABLED=1

  # For more info refer to: https://golang.org/doc/install/source#environment
  goos:
    - darwin
    - windows

  # Custom ldflags templates.
  # Default is `-s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{.Date}}`.
  ldflags:
    - -L /usr/local/opt/libpcap/lib -s -w -X main.build={{.Version}}

  # GOARCH to build for.
  # For more info refer to: https://golang.org/doc/install/source#environment
  # Defaults are 386 and amd64.
  goarch:
    - amd64
    - arm
    - arm64
- 
  main: ./cmd/collect
  binary: net.collect
  env:
    - CGO_ENABLED=1

  # For more info refer to: https://golang.org/doc/install/source#environment
  goos:
    - darwin
    - windows

  # Custom ldflags templates.
  # Default is `-s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{.Date}}`.
  ldflags:
    - -L /usr/local/opt/libpcap/lib -s -w -X main.build={{.Version}}

  # GOARCH to build for.
  # For more info refer to: https://golang.org/doc/install/source#environment
  # Defaults are 386 and amd64.
  goarch:
    - amd64
    - arm
    - arm64
- 
  main: ./cmd/agent
  binary: net.agent
  env:
    - CGO_ENABLED=1

  # For more info refer to: https://golang.org/doc/install/source#environment
  goos:
    - darwin
    - windows

  # Custom ldflags templates.
  # Default is `-s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{.Date}}`.
  ldflags:
    - -L /usr/local/opt/libpcap/lib -s -w -X main.build={{.Version}}

  # GOARCH to build for.
  # For more info refer to: https://golang.org/doc/install/source#environment
  # Defaults are 386 and amd64.
  goarch:
    - amd64
    - arm
    - arm64
- 
  main: ./cmd/proxy
  binary: net.proxy
  env:
    - CGO_ENABLED=1

  # For more info refer to: https://golang.org/doc/install/source#environment
  goos:
    - darwin
    - windows

  # Custom ldflags templates.
  # Default is `-s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{.Date}}`.
  ldflags:
    - -L /usr/local/opt/libpcap/lib -s -w -X main.build={{.Version}}

  # GOARCH to build for.
  # For more info refer to: https://golang.org/doc/install/source#environment
  # Defaults are 386 and amd64.
  goarch:
    - amd64
    - arm
    - arm64
- 
  main: ./cmd/export
  binary: net.export
  env:
    - CGO_ENABLED=1

  # For more info refer to: https://golang.org/doc/install/source#environment
  goos:
    - darwin
    - windows

  # Custom ldflags templates.
  # Default is `-s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{.Date}}`.
  ldflags:
    - -L /usr/local/opt/libpcap/lib -s -w -X main.build={{.Version}}

  # GOARCH to build for.
  # For more info refer to: https://golang.org/doc/install/source#environment
  # Defaults are 386 and amd64.
  goarch:
    - amd64
    - arm
    - arm64
- 
  main: ./cmd/dump
  binary: net.dump
  env:
    - CGO_ENABLED=1

  # For more info refer to: https://golang.org/doc/install/source#environment
  goos:
    - darwin
    - windows

  # Custom ldflags templates.
  # Default is `-s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{.Date}}`.
  ldflags:
    - -L /usr/local/opt/libpcap/lib -s -w -X main.build={{.Version}}

  # GOARCH to build for.
  # For more info refer to: https://golang.org/doc/install/source#environment
  # Defaults are 386 and amd64.
  goarch:
    - amd64
    - arm
    - arm64

brew:
  github:
    owner: dreadl0ck
    name: homebrew-formulas
  homepage: "https://github.com/dreadl0ck/netcap"
  description: "A framework for secure and scalable network traffic analysis"

checksum:
  name_template: 'checksums.txt'
snapshot:
  name_template: "{{ .Tag }}-next"
changelog:
  sort: asc
  filters:
    exclude:
    - '^docs:'
    - '^test:'

archives:
- 
  # Defaults are any files matching `LICENCE*`, `LICENSE*`,
  # `README*` and `CHANGELOG*` (case-insensitive).
  files:
    - LICENSE
    - README.md
    - types/cpp
    - types/csharp
    - types/java
    - types/js
    - types/python
    - types/rust
    - types/swift
    - types/netcap.pb.go

# before:
#   hooks:
    # you may remove this if you don't use vgo
    #- go mod download
    # you may remove this if you don't need go generate
    #- go generate ./...